{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/c1/c1.component.ts","webpack:///src/app/comps/c1/c1.component.html","webpack:///src/app/comps/result/result.component.ts","webpack:///src/app/comps/result/result.component.html","webpack:///src/app/d/dire.directive.ts","webpack:///src/app/services/cont.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","arr","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","C1Component","el","console","log","ResultComponent","svc","DireDirective","counterSVC","nativeElement","style","backgroundColor","clickimCounter","hoverCounter","ContService","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'directives';\n\n  arr =[1,1,1,1,1]\n}\n\n","<app-result></app-result>\r\n<br><br><br>\r\n\r\n\r\n\r\n\r\n<app-c1 *ngFor= \" let x of arr\"></app-c1>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { C1Component } from './comps/c1/c1.component';\nimport { DireDirective } from './d/dire.directive';\nimport { ResultComponent } from './comps/result/result.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    C1Component,\n    DireDirective,\n    ResultComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { ContService } from 'src/app/services/cont.service';\n\n@Component({\n  selector: 'app-c1',\n  templateUrl: './c1.component.html',\n  styleUrls: ['./c1.component.css']\n})\nexport class C1Component implements OnInit {\n\n  constructor(private el:ElementRef ) { \n console.log(\"this el for c1 \"+ el);\n \n  }\n\n  ngOnInit(): void {\n  }\n\n  arr=[1,2,3,4,5]\n  \n\n}\n","<p>c1 works!</p>\n\n\n\n<ul *ngFor =\"let x of arr\">\n    <li appDire>{{x}}</li>\n</ul>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ContService } from 'src/app/services/cont.service';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent implements OnInit {\n\n  constructor(public svc: ContService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>result works!</p>\n<div>\n        <label>hovers : </label><span>{{svc.hoverCounter}}</span><br><br>\n        <label>clickim : </label><span>{{svc.clickimCounter}}</span>\n        \n        </div>","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { ContService } from '../services/cont.service';\n\n@Directive({\n  selector: '[appDire]'\n})\nexport class DireDirective {\n\n  constructor(private el: ElementRef,private counterSVC: ContService) { }\n\n  @HostListener('click')onClick(){\n    console.log(\"this el for click \"+ this.el);\n   this.el.nativeElement.style.backgroundColor = 'yellow';\n   this.counterSVC.clickimCounter++;\n  }\n\n  @HostListener('mouseenter') onMouseEnter(){\n    this.el.nativeElement.style.backgroundColor = this.el.nativeElement.style.backgroundColor == 'Violet' ? 'yellow' : 'Violet';\n    console.log(\"this el for mouseenter \"+ this.el);\n    this.counterSVC.hoverCounter++\n  }\n\n  @HostListener('dblclick')ondblClic(){\n    console.log(\"this el for click \"+ this.el);\n   this.el.nativeElement.style.backgroundColor = 'red';\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContService {\n\n  constructor() { }\n\n  public hoverCounter:number =0\n  public clickimCounter:number=0\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}